return {
    "neovim/nvim-lspconfig",
    enabled = true,
    dependencies = {
      {
        "folke/lazydev.nvim",
        ft = "lua",
        opts = {
          library = {
                { path = "${3rd}/luv/library", words = { "vim%.uv" } },
          },
        },
        "hrsh7th/nvim-cmp",
      },
    },

    config = function()

      require('lspconfig').pyright.setup({
      })

      local cmp = require('cmp')
      local cmp_select = { behavior = cmp.SelectBehavior.Select }

      cmp.setup({
        snippet = {
          expand = function(args)
            vim.snippet.expand(args.body)
          end
        },

        mapping = cmp.mapping.preset.insert({
              ['<C-p>'] = cmp.mapping.select_prev_item(cmp_select),
              ['<C-n>'] = cmp.mapping.select_next_item(cmp_select),
              ['<C-y>'] = cmp.mapping.confirm({ select = true }),
              ["<C-Space>"] = cmp.mapping.complete(),

              -- vim.keymap.set('n', 'gd', vim.lsp.buf.definition, opts)
              -- vim.keymap.set('n', '<C-h>', vim.lsp.buf.hover, opts)
              -- vim.keymap.set('n', '<leader>vws', vim.lsp.buf.workspace_symbol, opts)
              -- vim.keymap.set('n', '<leader>vd', vim.diagnostic.open_float, opts)
              -- vim.keymap.set('n', '[d', vim.diagnostic.goto_next, opts)
              -- vim.keymap.set('n', ']d', vim.diagnostic.goto_prev, opts)
              -- vim.keymap.set('n', '<leader>vca', vim.lsp.buf.code_action, opts)
              -- vim.keymap.set('n', '<leader>vrr', vim.lsp.buf.references, opts)
              -- vim.keymap.set('n', '<leader>vrn', vim.lsp.buf.rename, opts)
              -- vim.keymap.set('n', '<F2>', vim.lsp.buf.rename, opts)
              -- vim.keymap.set('i', '<C-h>', vim.lsp.buf.signature_help, opts)
        }),

        sources = cmp.config.sources({
                { name = 'nvim_lsp' },
        }, {
                { name = 'buffer' },
        })
      })

    end,
}
